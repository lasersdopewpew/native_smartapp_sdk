plugins {
    id 'java-library'
    id 'kotlin'
    id 'maven-publish'
}

dependencies {
    implementation "androidx.core:core-ktx:$versions.androidx.core"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinxCoroutines"
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task packageJavadoc(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

afterEvaluate {
    publishing {
        repositories.add(rootProject.repositories.getByName('OSSRH'))

        publications {
            mavenMicCameraStateApi(MavenPublication) {
                from components.java

                artifact sourceJar
                artifact packageJavadoc

                groupId rootProject.ext.pomGroupID+'.mic_camera_state'
                artifactId "api"
                version rootProject.ext.pomVersion

                pom {
                    name = 'mic-camera-state'
                    description = 'mic-camera-state is utility library for getting microphone and camera state'
                    url = publication.githubUrl
                    licenses {
                        license {
                            name = publication.licenseName
                            url = publication.licenseUrl
                        }
                    }
                    developers {
                        developer {
                            name = 'Igor Perminov'
                            email = 'Perminov.I.Yurye@sberbank.ru'
                        }
                        developer {
                            name = 'Nikolay Pahomov'
                            email = 'NMPakhomov@sberbank.ru'
                        }
                    }
                    scm {
                        connection = publication.connectionUrl
                        developerConnection = publication.developerConnection
                        url = publication.githubUrl
                    }
                }

                versionMapping {
                    allVariants {
                        fromResolutionResult()
                    }
                }
            }
        }
    }
}

afterEvaluate {
    signing {
        sign publishing.publications.mavenMicCameraStateApi
    }
}